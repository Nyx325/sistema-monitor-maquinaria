// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "foreignKeys"
}

model Equipement {
  serial_number String  @id @db.VarChar(25)
  active        Boolean @default(true) 
  oem_name      String  @db.Text
  model         String  @db.Text

  snapshots     ApiSnapshot[]
}

model ApiSnapshot {
  snapshot_id          Int          @id @default(autoincrement())
  snapshot_version     String       @db.Text
  snapshot_datetime    DateTime
  active               Boolean      @default(true)  
  serial_number        String?      @db.VarChar(25) // Clave for√°nea hacia equipement.serial_number
  equipement           Equipement?  @relation(fields: [serial_number], references: [serial_number])

  locations            Location[]
  cohs                 CumulativeOperatingHours[]
  fuel_used            FuelUsed[]
  fuel_used_24hrs      FuelUsedLast24[]
  distances            Distance[]
  cumulative_idle_hours CumulativeIdleHours[]
  fuel_remaining       FuelRemaining[]
  def_remaining        DefRemaining[]
  engines_status       EngineStatus[]
  cumulative_load_counts CumulativeLoadCount[]
  cumulative_payload_totals CumulativePayloadTotals[]
  fault_codes          FaultCode[]
}

model Location {
  location_id         Int      @id @default(autoincrement())
  latitude            Float
  longitude           Float
  altitude            Float
  altitude_units      String   @db.Text
  china_coordinate_id Float?
  date_time           DateTime
  active              Boolean  @default(true)  
  snapshot_id         Int?     
  snapshot            ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model CumulativeOperatingHours {
  coh_id      Int      @id @default(autoincrement())
  hour        Float
  date_time   DateTime
  active      Boolean  @default(true)  
  snapshot_id Int?     
  snapshot    ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model FuelUsed {
  fuel_used_id Int      @id @default(autoincrement())
  fuel_consumed Int
  date_time    DateTime
  fuel_units   String   @db.Text
  active       Boolean  @default(true)  
  snapshot_id  Int?     
  snapshot     ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model FuelUsedLast24 {
  fuel_used_id Int      @id @default(autoincrement())
  fuel_consumed Int
  date_time    DateTime
  fuel_units   String   @db.Text
  active       Boolean  @default(true)  
  snapshot_id  Int?     
  snapshot     ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model Distance {
  distance_id    Int      @id @default(autoincrement())
  odometer       Float
  odometer_units String   @db.Text
  active         Boolean  @default(true)  
  date_time      DateTime
  snapshot_id    Int?     
  snapshot       ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model CumulativeIdleHours {
  cih_id      Int      @id @default(autoincrement())
  hour        Float
  date_time   DateTime
  active      Boolean  @default(true)  
  snapshot_id Int?     
  snapshot    ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model FuelRemaining {
  fuel_remaining_id Int      @id @default(autoincrement())
  percent           Float
  date_time         DateTime
  active            Boolean  @default(true)  
  snapshot_id       Int?     
  snapshot          ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model DefRemaining {
  def_remaining_id Int      @id @default(autoincrement())
  percent          Float
  date_time        DateTime
  active           Boolean  @default(true)  
  snapshot_id      Int?     
  snapshot         ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model EngineStatus {
  engine_status_id Int      @id @default(autoincrement())
  date_time        DateTime
  engine_number    String   @db.Text
  running          Boolean
  active           Boolean  @default(true)  
  snapshot_id      Int?     
  snapshot         ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model CumulativeLoadCount {
  clo_id      Int      @id @default(autoincrement())
  count       Int
  date_time   DateTime
  active      Boolean  @default(true)  
  snapshot_id Int?     
  snapshot    ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model CumulativePayloadTotals {
  cpt_id         Int      @id @default(autoincrement())
  payload_units  String   @db.Text
  payload        Float
  date_time      DateTime
  active         Boolean  @default(true)  
  snapshot_id    Int?     
  snapshot       ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

model FaultCode {
  folio            Int      @id @default(autoincrement())
  code_identifier  String   @db.VarChar(10)
  code_description String   @db.Text
  code_severity    String   @db.Text
  air_temperature  String   @db.Text
  temperature_unit String   @db.Text
  code_source      String   @db.Text
  date_time        DateTime
  active           Boolean  @default(true)  
  snapshot_id      Int?     
  snapshot         ApiSnapshot? @relation(fields: [snapshot_id], references: [snapshot_id])
}

enum UserType {
  ADMIN
  ANALIST
  MANAGER
}

model User {
  user_id       Int      @id @default(autoincrement())
  full_name     String   @db.VarChar(25)
  user_name     String   @db.VarChar(15)
  user_password String   @db.VarChar(15)
  user_type     UserType @default(ANALIST)
  active        Boolean  @default(true)
  email         String
}

model Logs {
  log_folio     Int      @id @default(autoincrement())
  active        Boolean  @default(true)
  message       String
}
